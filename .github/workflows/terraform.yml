name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "67882e92-6412-4fc5-b9ca-1030aa09d729"
  ARM_TENANT_ID: "${{ secrets.TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"
  working-directory: ./

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      #this is needed since we are running terraform with read-only permissions
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Terraform Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve
      
    - uses: Azure/aks-set-context@v1
      with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: phonebook-aks
          resource-group: phonebook-rg
    - uses: Azure/k8s-deploy@v4
      with:
         namespace: 'myapp'
         manifests: |
            k8s/
               # Set the target AKS cluster.

